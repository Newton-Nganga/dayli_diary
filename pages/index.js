import { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import Navbar from "../Components/Homepage/Navbar";
import WhyUs from "../Components/Homepage/WhyUs";
import About from "../Components/Homepage/About";
import Contact from "../Components/Homepage/Contact";
import Hero from "../Components/Homepage/Hero";
import Image from "next/image";
import register_login from "../public/register-login.png";
import { useRouter } from "next/router";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import Footer from "../Components/Homepage/Footer";
import Login from "../Components/Forms/Login";
import Signup from "../Components/Forms/Signup";

let resData;

export default function Home() {
  const [state, setState] = useState({ open: false, form: "" });
  const [view, setView] = useState(false);
  const [login, setLogin] = useState({ email: "", password: "" });
  const [signup, setSignup] = useState({
    uName: "",
    email: "",
    password: "",
  });
  const router = useRouter();

  const handleLogin = (evt) => {
    const { name, value } = evt.target;
    setLogin((prev) => {
      return { ...prev, [name]: value };
    });
  };

  const handleSignup = (evt) => {
    const { name, value } = evt.target;
    setSignup((prev) => {
      return { ...prev, [name]: value };
    });
  };

  //handle the form submission
  const handleSubmit = async (e) => {
    e.preventDefault();
    let status;
    if (state.form) {
      if (state.form === "login") {
        if (!login || login.length === 0 || login == undefined) return;
        const response = await fetch("/api/users/auth", {
          method: "POST",
          body: JSON.stringify(login),
          headers: { "Content-Type": "application/json" },
        });
        status = response.ok;
        resData = await response.json();
        if (status) {
          toast.success(resData.msg, toast.POSITION.TOP_LEFT);
         // setState({ open: false, form: "" });
          router.push(`/dashboard/u0/${resData.user.id}`);
        } else {
          setLogin({ email: "", password: "" });
          toast.error(resData.msg, toast.POSITION.TOP_LEFT);
        }
      }
      if (state.form === "register") {
        //await setData(signup);
        if (!signup || signup.length === 0 || signup == undefined) return;
        console.log(signup);
        const response = await fetch("/api/users/users", {
          method: "POST",
          body: JSON.stringify(signup),
          headers: { "Content-Type": "application/json" },
        });
        status = response.ok
        resData = await response.json();
        console.log(resData)
        if (status) {
          toast.success(resData.msg, toast.POSITION.TOP_LEFT);
         setState({ open: true, form: "login" });
        } else {
          toast.error(resData.msg, toast.POSITION.TOP_LEFT);
        }
        return resData;
      }
    }
    // console.log(resData.user.id);
  };
  console.log(state.form);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <Link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.homepage_main}>
        {state.open && (
          <section className={styles.signup_login_modal}>
            <ToastContainer autoClose={3000} />
            <div className={styles.form_modal}>
              <div>
                <Image src={register_login} alt="Register or login" />
              </div>
              {(() => {
                if (state.form === "login") {
                  return (
                    <Login
                      setState={setState}
                      login={login}
                      view={view}
                      setView={setView}
                      handleLogin={handleLogin}
                      handleSubmit={handleSubmit}
                    />
                  );
                } else if (state.form === "register") {
                  return (
                   <Signup
                      setState={setState}
                      signup={signup}
                      view={view}
                      setView={setView}
                      handleSignup={handleSignup}
                      handleSubmit={handleSubmit}
                   />
                  );
                }
              })()}
            </div>
          </section>
        )}
        <Navbar setState={setState} />
        <Hero />
        <WhyUs />
        <About />
        <Contact />
        <Footer />
      </main>
    </>
  );
}
